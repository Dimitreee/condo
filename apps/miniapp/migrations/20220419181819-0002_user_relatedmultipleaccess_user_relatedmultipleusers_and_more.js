// auto generated by kmigrator
// KMIGRATOR:0002_user_relatedmultipleaccess_user_relatedmultipleusers_and_more:IyBHZW5lcmF0ZWQgYnkgRGphbmdvIDQuMC4yIG9uIDIwMjItMDQtMTkgMTM6MTgKCmZyb20gZGphbmdvLmRiIGltcG9ydCBtaWdyYXRpb25zLCBtb2RlbHMKaW1wb3J0IGRqYW5nby5kYi5tb2RlbHMuZGVsZXRpb24KCgpjbGFzcyBNaWdyYXRpb24obWlncmF0aW9ucy5NaWdyYXRpb24pOgoKICAgIGRlcGVuZGVuY2llcyA9IFsKICAgICAgICAoJ19kamFuZ29fc2NoZW1hJywgJzAwMDFfaW5pdGlhbCcpLAogICAgXQoKICAgIG9wZXJhdGlvbnMgPSBbCiAgICAgICAgbWlncmF0aW9ucy5BZGRGaWVsZCgKICAgICAgICAgICAgbW9kZWxfbmFtZT0ndXNlcicsCiAgICAgICAgICAgIG5hbWU9J3JlbGF0ZWRNdWx0aXBsZUFjY2VzcycsCiAgICAgICAgICAgIGZpZWxkPW1vZGVscy5Gb3JlaWduS2V5KGJsYW5rPVRydWUsIGRiX2NvbHVtbj0ncmVsYXRlZE11bHRpcGxlQWNjZXNzJywgbnVsbD1UcnVlLCBvbl9kZWxldGU9ZGphbmdvLmRiLm1vZGVscy5kZWxldGlvbi5ET19OT1RISU5HLCByZWxhdGVkX25hbWU9JysnLCB0bz0nX2RqYW5nb19zY2hlbWEudXNlcicpLAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5BZGRGaWVsZCgKICAgICAgICAgICAgbW9kZWxfbmFtZT0ndXNlcicsCiAgICAgICAgICAgIG5hbWU9J3JlbGF0ZWRNdWx0aXBsZVVzZXJzJywKICAgICAgICAgICAgZmllbGQ9bW9kZWxzLkpTT05GaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpLAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5BZGRGaWVsZCgKICAgICAgICAgICAgbW9kZWxfbmFtZT0ndXNlcicsCiAgICAgICAgICAgIG5hbWU9J3JlbGF0ZWRTaW5nbGVVc2VyJywKICAgICAgICAgICAgZmllbGQ9bW9kZWxzLkZvcmVpZ25LZXkoYmxhbms9VHJ1ZSwgZGJfY29sdW1uPSdyZWxhdGVkU2luZ2xlVXNlcicsIG51bGw9VHJ1ZSwgb25fZGVsZXRlPWRqYW5nby5kYi5tb2RlbHMuZGVsZXRpb24uU0VUX05VTEwsIHJlbGF0ZWRfbmFtZT0nKycsIHRvPSdfZGphbmdvX3NjaGVtYS51c2VyJyksCiAgICAgICAgKSwKICAgICAgICBtaWdyYXRpb25zLkNyZWF0ZU1vZGVsKAogICAgICAgICAgICBuYW1lPSd1c2VyX3JlbGF0ZWRtdWx0aXBsZXVzZXJzX21hbnknLAogICAgICAgICAgICBmaWVsZHM9WwogICAgICAgICAgICAgICAgKCdpZCcsIG1vZGVscy5BdXRvRmllbGQoYXV0b19jcmVhdGVkPVRydWUsIHByaW1hcnlfa2V5PVRydWUsIHNlcmlhbGl6ZT1GYWxzZSwgdmVyYm9zZV9uYW1lPSdJRCcpKSwKICAgICAgICAgICAgICAgICgnVXNlcl9sZWZ0X2lkJywgbW9kZWxzLkZvcmVpZ25LZXkoZGJfY29sdW1uPSdVc2VyX2xlZnRfaWQnLCBvbl9kZWxldGU9ZGphbmdvLmRiLm1vZGVscy5kZWxldGlvbi5DQVNDQURFLCByZWxhdGVkX25hbWU9JysnLCB0bz0nX2RqYW5nb19zY2hlbWEudXNlcicpKSwKICAgICAgICAgICAgICAgICgnVXNlcl9yaWdodF9pZCcsIG1vZGVscy5Gb3JlaWduS2V5KGRiX2NvbHVtbj0nVXNlcl9yaWdodF9pZCcsIG9uX2RlbGV0ZT1kamFuZ28uZGIubW9kZWxzLmRlbGV0aW9uLkNBU0NBREUsIHJlbGF0ZWRfbmFtZT0nKycsIHRvPSdfZGphbmdvX3NjaGVtYS51c2VyJykpLAogICAgICAgICAgICBdLAogICAgICAgICAgICBvcHRpb25zPXsKICAgICAgICAgICAgICAgICdkYl90YWJsZSc6ICdVc2VyX3JlbGF0ZWRNdWx0aXBsZVVzZXJzX21hbnknLAogICAgICAgICAgICB9LAogICAgICAgICksCiAgICBdCg==

exports.up = async (knex) => {
    await knex.raw(`
    BEGIN;
--
-- Add field relatedMultipleAccess to user
--
ALTER TABLE "User" ADD COLUMN "relatedMultipleAccess" uuid NULL CONSTRAINT "User_relatedMultipleAccess_822234f5_fk_User_id" REFERENCES "User"("id") DEFERRABLE INITIALLY DEFERRED; SET CONSTRAINTS "User_relatedMultipleAccess_822234f5_fk_User_id" IMMEDIATE;
--
-- Add field relatedMultipleUsers to user
--
ALTER TABLE "User" ADD COLUMN "relatedMultipleUsers" jsonb NULL;
--
-- Add field relatedSingleUser to user
--
ALTER TABLE "User" ADD COLUMN "relatedSingleUser" uuid NULL CONSTRAINT "User_relatedSingleUser_deb18c54_fk_User_id" REFERENCES "User"("id") DEFERRABLE INITIALLY DEFERRED; SET CONSTRAINTS "User_relatedSingleUser_deb18c54_fk_User_id" IMMEDIATE;
--
-- Create model user_relatedmultipleusers_many
--
CREATE TABLE "User_relatedMultipleUsers_many" ("id" serial NOT NULL PRIMARY KEY, "User_left_id" uuid NOT NULL, "User_right_id" uuid NOT NULL);
CREATE INDEX "User_relatedMultipleAccess_822234f5" ON "User" ("relatedMultipleAccess");
CREATE INDEX "User_relatedSingleUser_deb18c54" ON "User" ("relatedSingleUser");
ALTER TABLE "User_relatedMultipleUsers_many" ADD CONSTRAINT "User_relatedMultipleUsers_many_User_left_id_43325fed_fk_User_id" FOREIGN KEY ("User_left_id") REFERENCES "User" ("id") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "User_relatedMultipleUsers_many" ADD CONSTRAINT "User_relatedMultipleU_User_right_id_a19d4ac0_fk_User_id" FOREIGN KEY ("User_right_id") REFERENCES "User" ("id") DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX "User_relatedMultipleUsers_many_User_left_id_43325fed" ON "User_relatedMultipleUsers_many" ("User_left_id");
CREATE INDEX "User_relatedMultipleUsers_many_User_right_id_a19d4ac0" ON "User_relatedMultipleUsers_many" ("User_right_id");
COMMIT;

    `)
}

exports.down = async (knex) => {
    await knex.raw(`
    BEGIN;
--
-- Create model user_relatedmultipleusers_many
--
DROP TABLE "User_relatedMultipleUsers_many" CASCADE;
--
-- Add field relatedSingleUser to user
--
ALTER TABLE "User" DROP COLUMN "relatedSingleUser" CASCADE;
--
-- Add field relatedMultipleUsers to user
--
ALTER TABLE "User" DROP COLUMN "relatedMultipleUsers" CASCADE;
--
-- Add field relatedMultipleAccess to user
--
ALTER TABLE "User" DROP COLUMN "relatedMultipleAccess" CASCADE;
COMMIT;

    `)
}
