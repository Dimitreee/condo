/**
 * Generated by `createservice billing.EpsRequestService`
 */

const { GQLCustomSchema } = require('@core/keystone/schema')
const access = require('@condo/domains/billing/access/EpsRequestService')
const { v4: uuid } = require('uuid')
const { epsHttpsRequest } = require('@condo/domains/billing/utils/serverSchema/eps')


const EpsRequestService = new GQLCustomSchema('EpsRequestService', {
    types: [
        {
            access: true,
            type: 'input EpsRequestInput { dv: Int!, sender: SenderFieldInput!, xml: String! }',
        },
        {
            access: true,
            type: 'type EpsRequestOutput { requestId: String!, xml: String, status: String }',
        },
    ],

    mutations: [
        {
            access: access.canEpsRequest,
            schema: 'epsRequest(data: EpsRequestInput!): EpsRequestOutput',
            resolver: async (parent, args, context, info, extra = {}) => {
                const { xml } = args.data
                const requestId = uuid()
                const { resultXml, error } = await epsHttpsRequest(requestId, xml)
                const status = error ? `[EPS_REQUEST_ERROR]: ${error} ` : 'OK'
                return {
                    requestId,
                    xml: resultXml,
                    status,
                }
            },
        },
    ],

})

module.exports = {
    EpsRequestService,
}
