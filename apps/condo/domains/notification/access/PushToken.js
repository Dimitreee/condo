// @ts-nocheck
/**
 * Generated by `createschema notification.PushToken PushToken`
 */

const { throwAuthenticationError } = require('@condo/domains/common/utils/apolloErrorFormatter')

async function canReadPushTokens ({ authentication: { item: user } }) {
    if (!user) return throwAuthenticationError()
    if (user.deletedAt) return false
    if (user.isAdmin) return true

    // User allowed to read own tokens
    return { owner: { id: user.id } }
}

/**
 * Access management for direct PushToken creation/updates.
 * Only admins allowed for direct actions. All other users should use RegisterPushTokenService instead.
 * @param user
 * @param originalInput
 * @param operation
 * @returns {Promise<boolean>}
 */
async function canManagePushTokens ({ authentication: { item: user }, originalInput, operation }) {
    if (user && user.isAdmin) return true

    return false
}

/*
  Rules are logical functions that used for list access, and may return a boolean (meaning
  all or no items are available) or a set of filters that limit the available items.
*/
module.exports = {
    canReadPushTokens,
    canManagePushTokens,
}
