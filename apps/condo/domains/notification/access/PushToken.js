// @ts-nocheck
/**
 * Generated by `createschema notification.PushToken PushToken`
 */

const { throwAuthenticationError } = require('@condo/domains/common/utils/apolloErrorFormatter')

async function canReadPushTokens ({ authentication: { item: owner } }) {
    if (!owner) return throwAuthenticationError()
    if (owner.deletedAt) return false
    if (owner.isAdmin) return {}

    return {
        context: {
            OR: [
                { owner: { id: owner.id } },
            ],
        },
    }
}

async function canManagePushTokens ({ authentication: { item: user }, originalInput, operation, itemId }) {
    if (user && user.deletedAt) return false
    if (user && user.isAdmin) return true
    if (operation === 'create') {
        // TODO(codegen): write canManagePushTokens create logic!
        return true
    } else if (operation === 'update') {
        if (!user) return throwAuthenticationError()
        // TODO(codegen): write canManagePushTokens update logic!
        return true
    }
    return false
}

/*
  Rules are logical functions that used for list access, and may return a boolean (meaning
  all or no items are available) or a set of filters that limit the available items.
*/
module.exports = {
    canReadPushTokens,
    canManagePushTokens,
}
