/**
 * Generated by `createservice ticket.ReopenTicketService --type mutations`
 */
const { throwAuthenticationError } = require('@condo/domains/common/utils/apolloErrorFormatter')
const { Ticket } = require('../utils/serverSchema')
const { Resident } = require('@condo/domains/resident/utils/serverSchema')

async function canReopenTicket ({ args: { data }, authentication: { item: user }, context }) {
    if (!user) return throwAuthenticationError()
    if (user.deletedAt) return false
    if (user.isAdmin) return true

    const ticket = await Ticket.getOne(context, { id: data.ticketId, deletedAt: null })
    if (!ticket) return false
    if (ticket.createdBy.id === user.id) {
        return true
    }

    const residentFromTicketContact = await Resident.getOne(context, {
        property: { id: ticket.property.id },
        unitName: ticket.unitName,
        user: { phone: user.phone },
    })

    return residentFromTicketContact
}

module.exports = {
    canReopenTicket,
}